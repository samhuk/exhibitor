user nginx;
worker_processes auto;
pid /tmp/nginx.pid;
pcre_jit on;
error_log /dev/stderr warn;

events {
  worker_connections  1024;
}

http {
  # Enable Gzip
  gzip  on;
  gzip_http_version 1.0;
  gzip_comp_level 2;
  gzip_min_length 1100;
  gzip_buffers     4 8k;
  gzip_proxied any;
  gzip_types
    text/css
    text/javascript
    application/javascript

  gzip_static on;

  gzip_proxied        expired no-cache no-store private auth;
  gzip_disable        "MSIE [1-6]\.";
  gzip_vary           on;

  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  include /etc/nginx/mime.types;
  default_type text/html;
  server_tokens off;
  client_max_body_size 0;

  log_format logstash_json escape=json
    '{'
      '"timestamp": "$time_iso8601", '
      '"level": "info", '
      '"message": "Processed request", '
      '"label": "nginx", '
      '"details": { '
        '"remote_addr": "$remote_addr", '
        '"remote_user": "$remote_user", '
        '"body_bytes_sent": "$body_bytes_sent", '
        '"request_time": "$request_time", '
        '"status": "$status", '
        '"request": "$request", '
        '"request_method": "$request_method", '
        '"http_referrer": "$http_referer", '
        '"http_user_agent": "$http_user_agent" '
      '}'
    '}';

  access_log /dev/stdout logstash_json;

  sendfile       on;
  tcp_nopush     on;
  tcp_nodelay    on;

  keepalive_timeout  65;

  server {

    listen 80;
    listen [::]:80;

    root /client;

    # Proxy requests to /api to the api service
    location /api {
      proxy_pass http://api;
    }

    # Proxy requests to /api to the api service
    location /content {
      proxy_pass http://api/content;
    }

    # If not to /api, then try serving client files, falling back to /index.html if no match (SPA style)
    location / {
      try_files $uri $uri/ /index.html;
    }
  }
}
